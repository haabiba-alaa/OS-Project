struct FrameInfo {
	Page_LIST_entry_t prev_next_info;	/* free list link */

	// references is the count of pointers (usually in page table entries)
	// to this page, for frames allocated using allocate_frame.
	// frames allocated at boot time using memory_manager.c's
	// boot_allocate_space do not have valid reference count fields.

	uint16 references;
	uint32 va;
	struct Env *environment;
	unsigned char isBuffered;
	struct WorkingSetElement *element;
};


struct FrameInfo *ptr_frame_info;
uint32 physical_address = /* your physical address */;
printf("Given Physical Address: %u\n", physical_address);

ptr_frame_info = to_frame_info(physical_address);

if (ptr_frame_info != NULL) {
    printf("FrameInfo Retrieved\n");

    uint32 offset = physical_address & (PAGE_SIZE - 1);
    printf("Calculated Offset: %u\n", offset);

    uint32 virtual_address = ptr_frame_info->va + offset;
    printf("Final Virtual Address: %u\n", virtual_address);

    // Use virtual_address as needed
} else {
    printf("Failed to retrieve FrameInfo\n");
}
